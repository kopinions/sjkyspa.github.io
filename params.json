{"name":"扶起跌倒的红烧肉","tagline":"","body":"### Express\r\n###### 安装express 脚手架\r\nsudo npm install -g express-generator\r\n\r\n如果以前安装过express-generator, 有可能会出现以下错误   \r\n\t\r\n\tRefusing to delete: /usr/local/bin/express\r\n此时可以去删除/usr/local/bin/express link所指定的目录\r\n\r\n```\r\ncd /usr/local/bin/express\r\nls -ltrch express\r\n// 此时的结果如下\r\nexpress -> ../lib/node_modules/express/bin/express\r\nrm -rf ../lib/node_modules/express/bin/express\r\nrm -rf express\r\n// 此时安装应该就可以成功了\r\nsudo npm install -g express-generator\r\n```\r\n\r\n###### 1. 初始化项目\r\nnpm install\r\n\r\n##### Express Test\r\nnpm install supertest --save-dev\r\nnpm install should --save-dev\r\n\r\n```\r\nrequest = require('supertest');\r\nrequire(\"should\");\r\nvar app = require(\"../app\");\r\n\r\ndescribe(\"Product\", function () {\r\n    describe(\"GET\", function () {\r\n        describe(\"with exist product\", function () {\r\n            it('should get 200', function (done) {\r\n                request(app)\r\n                    .get('/products/1')\r\n                    .expect(200)\r\n                    .end(function(err, res) {\r\n                        if(err) {\r\n                            done(err);\r\n                        }\r\n                        done();\r\n                    });\r\n            });\r\n        });\r\n    });\r\n});\r\n    \r\n```\r\n\r\n##### Express mongoose\r\n\r\n**特别要注意require(app) 和require（Product）的顺序**\r\n有以下两种顺序\r\n```\r\nvar Order = require('../models/order');\r\nvar User = require(\"../models/user\");\r\nvar Product = require(\"../models/product\");\r\n\r\nvar app = require(\"../app\");\r\n```\r\n\r\n```\r\nvar app = require(\"../app\");\r\nvar Product = moogoose.model(\"Product\");\r\nvar User = moogoose.model(\"User\");\r\nvar Order = moogoose.model(\"Order\");\r\n```\r\n\r\nnpm install mockgoose --save-dev\r\nnpm install mongoose --save\r\n\r\n\r\nmockgoose 和require的app的顺序有很强的联系，如果出现timeout，很有可能是因为mockgoose和app的require顺序写反了。此时可以使用如下方式解决\r\n\r\n```\r\nvar Product = mongoose.model(\"Product\")\r\n```\r\n\r\n\r\n\r\n一般我们会在app.js中初始化我们的connection，但是这个connection在APP中初始化，所以每次我们require一次app.js，就会出现连接一次，如果第二次require没有将mongoose mock掉，此时会出现原来的测试挂掉的情况。\r\n此时有两种解决方法：\r\n\r\n1. 在runner里面直接将mongoose mock掉\r\n\r\n\t```\r\ngulp.task('test', function() {\r\n    var mockgoose = require('mockgoose');\r\n    var mongoose = require('mongoose');\r\n    mockgoose(mongoose);\r\n    gulp.src('./test/*.js')\r\n        .pipe(jasmine())\r\n});\r\n```\r\n\r\n2. 在所有的测试中添加mongoose的mock代码   \r\n\r\n\t```\r\nvar mongoose = require('mongoose');\r\nvar mockgoose = require('mockgoose');\r\nmockgoose(mongoose);\r\n```\r\n\r\n##### Mongo\r\n添加一个embeded的resource\r\n使用schema\r\n\r\nObject {} has no method 'cast'\r\n很多时候是由于mongoose没有指定对相应的schema\r\n可以使用如下的方法添加schema\r\n\r\n```\r\nvar User = new Schema({\r\n    name: {type: String, required: true},\r\n    phone: {type: String, required: true},\r\n    orders: [mongoose.model(\"Order\").schema]\r\n});\r\n```\r\n\r\n然后使用如下的方法为user,创建一个order\r\n\r\n```\r\nvar order = new Order({address: req.param(\"address\"), phone: req.param(\"phone\"), name: req.param(\"name\")});\r\nuser.orders.push(order);\r\n```\r\n\r\n\r\nMissingSchemaError: Schema hasn't been registered for model \"Product\"\r\nproduct: {type: ObjectId, ref: mongoose.model(\"Product\").schema}\r\n这是由于Product还没有被实例化，可以使用require（\"./product\"）来解决\r\n\r\n\r\n\r\nTypeError: Invalid value for schema path `product.type`\r\n这是因为我们定义的时候使用的一下的方式\r\n```\r\nvar ObjectId = mongoose.ObjectId\r\nproduct: {type: ObjectId, ref: Product.schema},\r\n// 需要使用的一下的方式\r\nvar ObjectId = mongoose.Schema.ObjectId\r\nproduct: {type: ObjectId, ref: Product.schema},\r\n```\r\n##### Express Gulp\r\n```\r\nnpm install -g gulp\r\nnpm install --save-dev gulp\r\n\r\n\r\n\r\n// gulpfile.js\r\nvar gulp = require('gulp');\r\n\r\ngulp.task('default', function() {\r\n});\r\n```\r\n上面就是一个很简单的没有任何配置的gulp的环境，我们可以在上面加些简单的任务让gulp帮我们跑起来\r\n\r\n```\r\nvar jasmine = require('gulp-jasmine');\r\n\r\ngulp.task('test', function() {\r\n\tglup.src('./app/test/**/*.js')\r\n\t\t.pipe(jasmine())\r\n});\r\n```\r\n\r\n","google":"UA-52640088-1","note":"Don't delete this file! It's used internally to help with page regeneration."}